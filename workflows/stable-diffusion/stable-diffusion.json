{
  "enableLogging": true,
  "resources": {
    "tasks": 4,
    "cpusPerTask": 8,
    "memPerCpu": 8000,
    "gpusPerTask": 1
  },
  "output": {
    "http": {
      "url": "https://transfer.deepsquare.run/"
    }
  },
  "continuousOutputSync": true,
  "env": [
    {
      "key": "STEPS",
      "value": "50"
    },
    {
      "key": "HEIGHT",
      "value": "768"
    },
    {
      "key": "WIDTH",
      "value": "768"
    },
    {
      "key": "MODEL",
      "value": "sd-2-1"
    },
    {
      "key": "ITER",
      "value": "1"
    },
    {
      "key": "SAMPLES",
      "value": "3"
    },
    {
      "key": "PROMPT",
      "value": "an astronaut in space"
    }
  ],
  "steps": [
    {
      "name": "generation-loop",
      "for": {
        "parallel": true,
        "range": {
          "begin": 1,
          "end": 4
        }
      },
      "steps": [
        {
          "name": "generate image",
          "run": {
            "container": {
              "deepsquareHosted": true,
              "apptainer": true,
              "registry": "registry-1.deepsquare.run",
              "image": "library/stable-diffusion:latest"
            },
            "mounts": [
              {
                "hostDir": "/data/beegfs/cache/persistent",
                "containerDir": "/cache",
                "options": "rw"
              },
              {
                "hostDir": "/opt/models/stable-diffusion",
                "containerDir": "/models",
                "options": "ro"
              }
            ],
            "env": [
              {
                "key": "HF_HOME",
                "value": "/cache"
              }
            ],
            "shell": "/bin/bash",
            "command": "set -e\n\nmkdir -p \"${STORAGE_PATH}/batch-${index}\"\nparams=(\n  \"--ckpt\" \"/models/$MODEL/model.ckpt\"\n  \"--outdir\" \"${STORAGE_PATH}/batch-${index}\"\n  \"--H\" \"$HEIGHT\"\n  \"--W\" \"$WIDTH\"\n  \"--steps\" \"$STEPS\"\n  \"--n_iter\" \"$ITER\"\n  \"--device\" \"cuda\"\n  \"--n_samples\" \"$SAMPLES\"\n  \"--seed\" \"$(od -N 4 -t uL -An /dev/urandom | tr -d \" \")\"\n  \"--prompt\" \"$PROMPT\"\n)\nif [ -f \"/models/$MODEL/config.yaml\" ]; then\n  params+=(\"--config\" \"/models/$MODEL/config.yaml\")\nfi\n\npython /stablediffusion/scripts/txt2img.py \"${params[@]}\"\ncd \"${STORAGE_PATH}/batch-${index}\"\nfind . -type f -not -name \"grid*.png\" -exec sh -c 'i=\"$1\"; mv \"$i\" \"$(md5sum \"$i\" | cut -d \" \" -f 1 | cut -c -12).png\"' shell \"{}\" \\\\;\nmv grid*.png \"grid_${index}.png\"\n"
          }
        }
      ]
    },
    {
      "name": "combine-images",
      "run": {
        "container": {
          "deepsquareHosted": true,
          "apptainer": true,
          "registry": "registry-1.deepsquare.run",
          "image": "library/stable-diffusion:latest"
        },
        "shell": "/bin/bash",
        "command": "set -e\n\ncd \"${STORAGE_PATH}\"\nmv $(find . -maxdepth 2 -type f | grep \".png\") \"$DEEPSQUARE_OUTPUT\"\ncd \"$DEEPSQUARE_OUTPUT\"\nconvert -append grid*.png ./results_grid.png\nrm grid*.png\necho \"${PROMPT}\" > input.txt\necho \"##############################################################\"\necho\necho \"Input:\"\necho \"${PROMPT}\"\necho\necho \"Click on this link to preview your results:\"\ncurl -sS --upload-file \"./results_grid.png\" https://transfer.deepsquare.run/\necho\necho\necho \"##############################################################\"\n\nchmod -R 777 /cache/* 2>/dev/null || true\n"
      }
    }
  ]
}
